let mapleader = " "
set ignorecase   " 대소문자 구분 없이 검색
set smartcase    " 대소문자가 포함되면 대소문자 구분
set incsearch    " 검색하는 동안 실시간으로 결과 보여줌
set hlsearch     " 검색 결과 강조

set ideajoin
set NERDTree
set multiple-cursors


" @@@@@@@@@@@@@@@@@@@@@@@@@@@@
" @@@@@@@@@ ESSENTIAL @@@@@@@@
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@
nmap        <ESC>       :nohl<CR><ESC>
nnoremap    L           gt
nnoremap    H           gT
nnoremap    Y           y$

" @@@@@@@@@@@@@@@@@@@@@@@@@@@@
" @@@@@@@@@ TAB @@@@@@@@@@@@@@
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@
nmap        <leader>qo  :tabo<CR>
nmap        <leader>qh  <Action>(CloseAllToTheLeft)
nmap        <leader>ql  <Action>(CloseAllToTheRight)
nmap        <leader>e   :NERDTree<CR>



" @@@@@@@@@@@@@@@@@@@@@@@@@@@@
" @@@@@@@@@ Coding @@@@@@@@@@@
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@
nmap        K           <Action>(ShowHoverInfo)
nmap        gr          <Action>(GotoDeclaration)
nmap        gi          <Action>(GotoImplementation)
nmap        gI          <Action>(QuickImplementations)
nmap        ]d          <Action>(GotoNextError)
nmap        [d          <Action>(GotoPreviousError)
nmap        mi          <Action>(Generate)
nmap        ma          <Action>(ShowIntentionActions)
nmap        <leader>p   <Action>(ParameterInfo)
nmap        \r          <Action>(ReformatCode)<Action>(OptimizeImports)

" @@@@@@@@@@@@@@@@@@@@@@@@@@@@
" @@@@@@@@@ Debug @@@@@@@@@@@@
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@
nmap        \d          <Action>(DebugClass)
nmap        \b          <Action>(ToggleLineBreakpoint)
nmap        <leader>dt  <Action>(Stop)
nmap        <leader>do  <Action>(StepOut)
nmap        <leader>dO  <Action>(StepOver)
nmap        <leader>di  <Action>(StepInto)
